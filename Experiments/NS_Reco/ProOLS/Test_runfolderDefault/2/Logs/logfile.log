Module path:  Environments.NS_Reco NS_Reco
Dynamically loaded from:  <class 'Environments.NS_Reco.NS_Reco'>
Reward Amplitudes: [4.17022005e-01 7.20324493e-01 1.14374817e-04 3.02332573e-01
 1.46755891e-01] :: Avg 0.317309867282206 
Module path:  Src.Algorithms.ProOLS ProOLS
Dynamically loaded from:  <class 'Src.Algorithms.ProOLS.ProOLS'>
=====Configurations=====
 Namespace(NN_basis_dim='32', Policy_basis_dim='32', actor_lr=0.01, algo_name='ProOLS', base=0, batch_size=1000, buffer_size=1000, debug=True, delta=5, entropy_lambda=0.1, env_name='NS_Reco', experiment='Test_runfolder', extrapolator_basis='Poly', folder_suffix='Default', fourier_coupled=True, fourier_k=7, fourier_order=-1, gamma=0.99, gauss_std=1.5, gpu=0, hyper='default', importance_clip=10.0, inc=1, log_output='term_file', max_episodes=3000, max_inner=150, max_steps=500, optim='rmsprop', oracle=-1000, raw_basis=True, restore=False, save_count=10, save_model=True, seed=2, speed=2, state_lr=0.001, summary=True, swarm=False, timestamp='9|20|16:14:16')
Actions space: 5 :: State space: 1
State Low: tensor([0.]) :: State High: tensor([1.])
State features:  [('dummy_param', torch.Size([1]))]
Policy:  [('fc1.weight', torch.Size([5, 1])), ('fc1.bias', torch.Size([5]))]
0 :: Rewards -0.012 :: steps: 0.00 :: Time: 0.000(0.00182/step) :: Entropy : 0.000 :: Grads : [[], []]
tensor([7, 4, 3, 6, 1, 4, 0, 8, 5, 4], dtype=torch.int32)
10
1
1
1
tensor([2, 9, 7, 1, 9, 2, 1, 0, 7, 1], dtype=torch.int32)
10
1
1
1
tensor([8, 9, 0, 7, 0, 5, 2, 5, 1, 3], dtype=torch.int32)
10
1
1
1
tensor([3, 1, 8, 6, 8, 1, 5, 7, 0, 9], dtype=torch.int32)
10
1
1
1
tensor([1, 5, 9, 2, 0, 0, 4, 6, 3, 1], dtype=torch.int32)
10
1
1
1
tensor([8, 5, 9, 5, 4, 2, 7, 8, 7, 3], dtype=torch.int32)
10
1
1
1
tensor([4, 8, 6, 3, 8, 8, 5, 1, 3, 3], dtype=torch.int32)
10
1
1
1
tensor([3, 2, 6, 5, 5, 2, 5, 6, 1, 5], dtype=torch.int32)
10
1
1
1
tensor([0, 5, 4, 8, 3, 7, 5, 9, 4, 5], dtype=torch.int32)
10
1
1
1
tensor([2, 6, 0, 5, 7, 1, 6, 7, 0, 1], dtype=torch.int32)
10
1
1
1
tensor([2, 4, 0, 6, 6, 8, 6, 9, 5, 1], dtype=torch.int32)
10
1
1
1
tensor([5, 9, 4, 9, 8, 3, 4, 6, 2, 4], dtype=torch.int32)
10
1
1
1
tensor([7, 5, 1, 3, 7, 4, 5, 1, 2, 3], dtype=torch.int32)
10
1
1
1
tensor([6, 1, 2, 9, 6, 0, 5, 3, 5, 2], dtype=torch.int32)
10
1
1
1
tensor([8, 9, 7, 3, 0, 4, 6, 2, 7, 9], dtype=torch.int32)
10
1
1
1
tensor([3, 1, 1, 9, 9, 0, 8, 0, 8, 5], dtype=torch.int32)
10
1
1
1
tensor([3, 5, 8, 3, 6, 1, 6, 1, 2, 1], dtype=torch.int32)
10
1
1
1
tensor([2, 6, 6, 1, 3, 3, 2, 3, 2, 3], dtype=torch.int32)
10
1
1
1
tensor([3, 0, 5, 1, 2, 1, 6, 2, 1, 3], dtype=torch.int32)
10
1
1
1
tensor([6, 3, 9, 0, 4, 2, 7, 5, 5, 3], dtype=torch.int32)
10
1
1
1
tensor([9, 1, 8, 1, 4, 6, 2, 6, 7, 5], dtype=torch.int32)
10
1
1
1
tensor([0, 1, 5, 6, 9, 8, 8, 2, 6, 0], dtype=torch.int32)
10
1
1
1
tensor([6, 0, 4, 3, 3, 7, 0, 9, 2, 2], dtype=torch.int32)
10
1
1
1
tensor([3, 5, 6, 0, 6, 0, 3, 7, 3, 8], dtype=torch.int32)
10
1
1
1
tensor([0, 3, 8, 5, 7, 5, 7, 4, 1, 0], dtype=torch.int32)
10
1
1
1
tensor([6, 7, 7, 8, 4, 9, 2, 7, 5, 9], dtype=torch.int32)
10
1
1
1
tensor([3, 6, 4, 0, 6, 1, 8, 5, 1, 0], dtype=torch.int32)
10
1
1
1
tensor([5, 0, 9, 8, 2, 6, 9, 9, 8, 2], dtype=torch.int32)
10
1
1
1
tensor([4, 1, 1, 2, 2, 6, 7, 9, 8, 3], dtype=torch.int32)
10
1
1
1
tensor([9, 4, 8, 4, 0, 0, 4, 7, 5, 9], dtype=torch.int32)
10
1
1
1
tensor([2, 9, 6, 0, 3, 6, 8, 2, 1, 0], dtype=torch.int32)
10
1
1
1
tensor([7, 5, 7, 6, 9, 3, 0, 4, 9, 0], dtype=torch.int32)
10
1
1
1
tensor([2, 0, 9, 4, 7, 4, 6, 5, 9, 5], dtype=torch.int32)
10
1
1
1
tensor([5, 9, 2, 6, 2, 9, 4, 0, 9, 8], dtype=torch.int32)
10
1
1
1
tensor([2, 1, 6, 1, 9, 3, 9, 2, 2, 8], dtype=torch.int32)
10
1
1
1
tensor([2, 5, 2, 9, 6, 6, 5, 0, 5, 3], dtype=torch.int32)
10
1
1
1
tensor([9, 0, 7, 6, 5, 7, 0, 1, 9, 1], dtype=torch.int32)
10
1
1
1
tensor([6, 0, 2, 1, 6, 5, 5, 5, 8, 9], dtype=torch.int32)
10
1
1
1
tensor([1, 4, 1, 5, 9, 9, 5, 3, 4, 0], dtype=torch.int32)
10
1
1
1
tensor([3, 5, 9, 7, 8, 6, 1, 2, 0, 9], dtype=torch.int32)
10
1
1
1
tensor([1, 0, 1, 5, 4, 2, 8, 1, 9, 8], dtype=torch.int32)
10
1
1
1
tensor([6, 6, 4, 2, 2, 3, 7, 4, 3, 0], dtype=torch.int32)
10
1
1
1
tensor([2, 1, 5, 2, 2, 0, 3, 9, 5, 1], dtype=torch.int32)
10
1
1
1
tensor([8, 2, 8, 1, 0, 9, 2, 5, 2, 4], dtype=torch.int32)
10
1
1
1
tensor([6, 5, 3, 6, 9, 3, 0, 8, 4, 0], dtype=torch.int32)
10
1
1
1
tensor([2, 1, 5, 5, 4, 8, 8, 8, 6, 5], dtype=torch.int32)
10
1
1
1
tensor([8, 7, 4, 1, 1, 2, 7, 9, 6, 8], dtype=torch.int32)
10
1
1
1
tensor([9, 6, 7, 7, 7, 3, 8, 4, 0, 9], dtype=torch.int32)
10
1
1
1
tensor([4, 4, 2, 0, 7, 4, 2, 5, 5, 1], dtype=torch.int32)
10
1
1
1
tensor([0, 0, 8, 1, 1, 3, 0, 2, 8, 9], dtype=torch.int32)
10
1
1
1
tensor([0, 5, 2, 9, 7, 8, 2, 3, 2, 2], dtype=torch.int32)
10
1
1
1
tensor([9, 8, 3, 0, 1, 7, 8, 5, 0, 7], dtype=torch.int32)
10
1
1
1
tensor([4, 2, 8, 3, 2, 3, 1, 7, 3, 5], dtype=torch.int32)
10
1
1
1
tensor([7, 7, 9, 4, 6, 3, 4, 8, 3, 9], dtype=torch.int32)
10
1
1
1
tensor([6, 5, 1, 8, 2, 8, 6, 6, 6, 2], dtype=torch.int32)
10
1
1
1
tensor([0, 9, 5, 0, 1, 5, 1, 3, 2, 5], dtype=torch.int32)
10
1
1
1
tensor([6, 2, 1, 0, 3, 6, 1, 6, 7, 4], dtype=torch.int32)
10
1
1
1
tensor([3, 8, 2, 3, 8, 0, 3, 8, 8, 2], dtype=torch.int32)
10
1
1
1
tensor([8, 7, 9, 9, 5, 5, 0, 6, 3, 5], dtype=torch.int32)
10
1
1
1
tensor([9, 3, 7, 7, 4, 0, 8, 0, 8, 8], dtype=torch.int32)
10
1
1
1
tensor([0, 7, 0, 8, 8, 1, 6, 5, 7, 3], dtype=torch.int32)
10
1
1
1
tensor([5, 2, 9, 3, 1, 3, 1, 3, 3, 5], dtype=torch.int32)
10
1
1
1
tensor([4, 2, 0, 2, 9, 5, 5, 9, 8, 4], dtype=torch.int32)
10
1
1
1
tensor([2, 0, 0, 1, 4, 8, 6, 8, 6, 4], dtype=torch.int32)
10
1
1
1
tensor([3, 2, 7, 4, 3, 9, 0, 2, 3, 0], dtype=torch.int32)
10
1
1
1
tensor([1, 1, 9, 6, 2, 1, 5, 3, 4, 7], dtype=torch.int32)
10
1
1
1
tensor([1, 1, 1, 9, 6, 9, 7, 2, 2, 9], dtype=torch.int32)
10
1
1
1
tensor([2, 7, 1, 9, 8, 8, 2, 8, 2, 9], dtype=torch.int32)
10
1
1
1
tensor([2, 9, 6, 9, 6, 7, 0, 7, 1, 7], dtype=torch.int32)
10
1
1
1
tensor([1, 6, 9, 3, 1, 6, 5, 2, 2, 5], dtype=torch.int32)
10
1
1
1
tensor([1, 6, 8, 0, 7, 1, 5, 0, 4, 0], dtype=torch.int32)
10
1
1
1
tensor([8, 7, 9, 0, 2, 7, 6, 3, 1, 9], dtype=torch.int32)
10
1
1
1
tensor([8, 0, 7, 3, 4, 6, 0, 2, 5, 9], dtype=torch.int32)
10
1
1
1
tensor([0, 1, 6, 7, 6, 7, 4, 9, 4, 2], dtype=torch.int32)
10
1
1
1
tensor([8, 9, 7, 5, 6, 0, 2, 5, 7, 3], dtype=torch.int32)
10
1
1
1
tensor([5, 6, 5, 8, 1, 2, 5, 1, 7, 1], dtype=torch.int32)
10
1
1
1
tensor([4, 8, 0, 3, 5, 5, 0, 3, 0, 2], dtype=torch.int32)
10
1
1
1
tensor([2, 2, 0, 5, 1, 9, 7, 8, 6, 1], dtype=torch.int32)
10
1
1
1
tensor([7, 9, 4, 0, 2, 8, 6, 5, 5, 5], dtype=torch.int32)
10
1
1
1
tensor([5, 5, 0, 0, 3, 2, 3, 9, 3, 5], dtype=torch.int32)
10
1
1
1
tensor([7, 9, 9, 0, 9, 6, 3, 6, 7, 0], dtype=torch.int32)
10
1
1
1
tensor([4, 0, 8, 9, 7, 5, 0, 6, 1, 7], dtype=torch.int32)
10
1
1
1
tensor([1, 8, 4, 7, 1, 7, 4, 0, 2, 1], dtype=torch.int32)
10
1
1
1
tensor([4, 3, 9, 0, 4, 8, 8, 0, 1, 2], dtype=torch.int32)
10
1
1
1
tensor([0, 0, 7, 1, 9, 9, 5, 4, 1, 1], dtype=torch.int32)
10
1
1
1
tensor([7, 6, 7, 5, 5, 8, 1, 4, 9, 4], dtype=torch.int32)
10
1
1
1
tensor([7, 7, 9, 5, 5, 5, 7, 2, 2, 7], dtype=torch.int32)
10
1
1
1
tensor([6, 6, 7, 6, 5, 5, 4, 0, 7, 4], dtype=torch.int32)
10
1
1
1
tensor([7, 8, 9, 8, 7, 2, 3, 3, 2, 9], dtype=torch.int32)
10
1
1
1
tensor([8, 3, 9, 7, 3, 8, 7, 9, 1, 0], dtype=torch.int32)
10
1
1
1
tensor([5, 9, 4, 5, 2, 6, 3, 4, 8, 3], dtype=torch.int32)
10
1
1
1
tensor([6, 3, 0, 1, 0, 4, 9, 7, 2, 9], dtype=torch.int32)
10
1
1
1
tensor([9, 0, 8, 1, 9, 4, 3, 1, 9, 6], dtype=torch.int32)
10
1
1
1
tensor([9, 0, 7, 6, 9, 9, 1, 4, 9, 9], dtype=torch.int32)
10
1
1
1
tensor([4, 7, 9, 7, 9, 1, 0, 8, 1, 2], dtype=torch.int32)
10
1
1
1
tensor([7, 5, 5, 0, 4, 6, 5, 2, 1, 3], dtype=torch.int32)
10
1
1
1
tensor([3, 9, 4, 9, 0, 5, 1, 0, 9, 6], dtype=torch.int32)
10
1
1
1
tensor([5, 8, 7, 1, 1, 1, 7, 5, 1, 4], dtype=torch.int32)
10
1
1
1
tensor([5, 8, 8, 4, 3, 0, 4, 2, 9, 0], dtype=torch.int32)
10
1
1
1
tensor([5, 1, 4, 4, 4, 9, 1, 6, 6, 2], dtype=torch.int32)
10
1
1
1
tensor([6, 3, 6, 3, 1, 4, 5, 5, 6, 4], dtype=torch.int32)
10
1
1
1
